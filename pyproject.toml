[build-system]
requires = ['hatchling']
build-backend = 'hatchling.build'

[project]
name = 'easycrystallography'
version = '0.6.0'
description = 'Crystallography in EasyScience'
authors = [{name = 'EasyCrystallography contributors'}]
readme = 'README.md'
license = { file = 'LICENSE' }
classifiers = [
    'Topic :: Scientific/Engineering',
    'Development Status :: 4 - Beta',
    'License :: OSI Approved :: BSD License',
    'Operating System :: OS Independent',
    'Programming Language :: Python :: 3 :: Only',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12'
]
requires-python = '>=3.9,<3.13'
dependencies = [
    'asteval',
    'numpy<2.0',
    'pint',
    'uncertainties',
    'xarray',
    'gemmi',
    'periodictable',
    'easyscience<1.1.1',
]

[project.optional-dependencies]
dev = [
    'build',
    'codecov',
    'flake8',
    'matplotlib',
    'pytest',
    'pytest-cov',
    'ruff',
    'tox-gh-actions'
]
docs = [
    'doc8',
    'readme-renderer',
    'Sphinx',
    'sphinx-rtd-theme',
    'sphinx-autodoc-typehints',
    'sphinx-gallery'
]

[project.urls]
homepage = 'https://github.com/EasyScience/EasyCrystallography'
documentation = 'https://github.com/EasyScience/EasyCrystallography'
source = 'https://github.com/EasyScience/EasyCrystallography'
tracker = 'https://github.com/EasyScience/EasyCrystallography/issues'

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ['src/easycrystallography']

[tool.coverage.run]
source = ['src/easycrystallography']

[tool.github.info]
organization = 'EasyScience'
repo = 'EasyCrystallography'

[tool.ruff]
line-length = 127
exclude = [
    'docs_old',
    'examples_old',
    'tests'
]

[tool.ruff.format]
quote-style = 'single'

[tool.ruff.lint.per-file-ignores]
# allow asserts in test files
'*test_*.py' = ['S101']

# Code should be polished to fulfill all cases bellow
# https://docs.astral.sh/ruff/rules/
[tool.ruff.lint]
select = [
    # flake8 settings from existing CI setup
    'E9', 'F63', 'F7', 'F82',
    # pycodestyle
    'E',
    # Pyflakes
    'F',
    # pyupgrade
    #'UP',
    # flake8-bugbear
    #'B',
    # flake8-simplify
    #'SIM',
    # isort
    'I',
    # flake8-bandit
    'S',
]

[tool.ruff.lint.isort]
force-single-line = true

[tool.tox]
legacy_tox_ini = '''
[tox]
isolated_build = True
envlist = py{39,310,311}
[gh-actions]
python =
    3.9: py39
    3.10: py310
    3.11: py311
[gh-actions:env]
PLATFORM =
    ubuntu-latest: linux
    macos-latest: macos
    windows-latest: windows
[testenv]
passenv =
    CI
    GITHUB_ACTIONS
    GITHUB_ACTION
    GITHUB_REF
    GITHUB_REPOSITORY
    GITHUB_HEAD_REF
    GITHUB_RUN_ID
    GITHUB_SHA
    COVERAGE_FILE
deps = coverage
commands =
    pip install -e '.[dev]'
    pytest --cov --cov-report=xml
'''
