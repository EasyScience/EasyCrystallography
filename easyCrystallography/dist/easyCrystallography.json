{"version":4,"artifacts":[{"module":{"file":"/home/simonward/PycharmProjects/easyScience/easyCrystallography/easyCrystallography/dist/lib/index.js","base":"/home/simonward/PycharmProjects/easyScience/easyCrystallography/easyCrystallography/dist/lib","base_path":"index.js","canonical":"index","resolution":"ESM","id":"f492373223","hash":"f4923732238754a5cd54d1f5de3f33f94915e460185a2b6392237f4367fd1055","source":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.easyCrystallographyExtensions = void 0;\nconst tslib_1 = require(\"tslib\");\nconst easyCrystallographyExtensions = (0, tslib_1.__importStar)(require(\"./graphics/bokeh_extensions/\"));\nexports.easyCrystallographyExtensions = easyCrystallographyExtensions;\nconst base_1 = require(\"@bokehjs/base\");\n(0, base_1.register_models)(easyCrystallographyExtensions);\n//# sourceMappingURL=index.js.map\n","type":"js","dependency_paths":[["./graphics/bokeh_extensions/","/home/simonward/PycharmProjects/easyScience/easyCrystallography/easyCrystallography/dist/lib/graphics/bokeh_extensions/index.js"]],"dependency_map":[],"exported":[],"externals":[],"shims":[]},"code":{"source":"/* index.js */ function _(require, module, exports, __esModule, __esExport) {\n    __esModule();\n    const tslib_1 = require(\"tslib\");\n    const easyCrystallographyExtensions = (0, tslib_1.__importStar)(require(\"153c19733b\") /* ./graphics/bokeh_extensions/ */);\n    exports.easyCrystallographyExtensions = easyCrystallographyExtensions;\n    const base_1 = require(\"@bokehjs/base\");\n    (0, base_1.register_models)(easyCrystallographyExtensions);\n}\n","min_source":"function _(s,t,e,o,r){o();const a=(0,s(\"tslib\").__importStar)(s(\"153c19733b\"));e.easyCrystallographyExtensions=a;(0,s(\"@bokehjs/base\").register_models)(a)}\n//# sourceMappingURL=index.min.js.map","min_map":"{\"version\":3,\"sources\":[\"0\"],\"names\":[\"_\",\"require\",\"module\",\"exports\",\"__esModule\",\"__esExport\",\"easyCrystallographyExtensions\",\"__importStar\",\"register_models\"],\"mappings\":\"AAAe,SAASA,EAAEC,EAASC,EAAQC,EAASC,EAAYC,GAC5DD,IACA,MACME,GAAgC,EADtBL,EAAQ,SAC0BM,cAAcN,EAAQ,eACxEE,EAAQG,8BAAgCA,GAExC,EADeL,EAAQ,iBACZO,iBAAiBF\",\"file\":\"index.min.js\"}"}},{"module":{"file":"/home/simonward/PycharmProjects/easyScience/easyCrystallography/easyCrystallography/dist/lib/graphics/bokeh_extensions/index.js","base":"/home/simonward/PycharmProjects/easyScience/easyCrystallography/easyCrystallography/dist/lib","base_path":"graphics/bokeh_extensions/index.js","canonical":"graphics/bokeh_extensions/index","resolution":"ESM","id":"153c19733b","hash":"153c19733bc269b667820ca77b5192c613a9afc45dc178a47d5d287746784eab","source":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NGLViewer = void 0;\nvar ngl_viewer_1 = require(\"./ngl_viewer\");\nObject.defineProperty(exports, \"NGLViewer\", { enumerable: true, get: function () { return ngl_viewer_1.NGLViewer; } });\n//# sourceMappingURL=index.js.map\n","type":"js","dependency_paths":[["./ngl_viewer","/home/simonward/PycharmProjects/easyScience/easyCrystallography/easyCrystallography/dist/lib/graphics/bokeh_extensions/ngl_viewer.js"]],"dependency_map":[],"exported":[{"type":"bindings","bindings":[[null,"NGLViewer"]],"module":"./ngl_viewer"}],"externals":[],"shims":[]},"code":{"source":"/* graphics/bokeh_extensions/index.js */ function _(require, module, exports, __esModule, __esExport) {\n    __esModule();\n    var ngl_viewer_1 = require(\"584f8ea9f3\") /* ./ngl_viewer */;\n    __esExport(\"NGLViewer\", ngl_viewer_1.NGLViewer);\n}\n","min_source":"function _(e,f,i,n,r){n(),r(\"NGLViewer\",e(\"584f8ea9f3\").NGLViewer)}\n//# sourceMappingURL=index.min.js.map","min_map":"{\"version\":3,\"sources\":[\"0\"],\"names\":[\"_\",\"require\",\"module\",\"exports\",\"__esModule\",\"__esExport\",\"NGLViewer\"],\"mappings\":\"AAAyC,SAASA,EAAEC,EAASC,EAAQC,EAASC,EAAYC,GACtFD,IAEAC,EAAW,YADQJ,EAAQ,cACUK\",\"file\":\"index.min.js\"}"}},{"module":{"file":"/home/simonward/PycharmProjects/easyScience/easyCrystallography/easyCrystallography/dist/lib/graphics/bokeh_extensions/ngl_viewer.js","base":"/home/simonward/PycharmProjects/easyScience/easyCrystallography/easyCrystallography/dist/lib","base_path":"graphics/bokeh_extensions/ngl_viewer.js","canonical":"graphics/bokeh_extensions/ngl_viewer","resolution":"ESM","id":"584f8ea9f3","hash":"584f8ea9f3d8c1dd3d6d5b9c0ca45005ba8d519feeda3e9f9d1034ce9aef9e01","source":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NGLViewer = exports.NGLViewerView = void 0;\nconst html_box_1 = require(\"@bokehjs/models/layouts/html_box\");\nclass NGLViewerView extends html_box_1.HTMLBoxView {\n    connect_signals() {\n        super.connect_signals();\n        this.connect(this.model.properties.object.change, this.updateStage);\n        this.connect(this.model.properties.extension.change, this.updateStage);\n        this.connect(this.model.properties.representation.change, this.updateStage);\n        this.connect(this.model.properties.color_scheme.change, this.updateParameters);\n        this.connect(this.model.properties.custom_color_scheme.change, this.updateParameters);\n        this.connect(this.model.properties.effect.change, this.updateEffect);\n        this.connect(this.model.properties.background.change, this.setBackgroundcolor);\n    }\n    render() {\n        super.render();\n        this.el.id = \"viewport\";\n        const wn = window;\n        const ngl = wn.NGL;\n        this._stage = new ngl.Stage(this.el);\n        this.setBackgroundcolor();\n        const stage = this._stage;\n        this.updateStage();\n        window.addEventListener(\"resize\", function () {\n            stage.handleResize();\n        }, false);\n    }\n    setBackgroundcolor() {\n        console.log(this.model.background);\n        this._stage.setParameters({ backgroundColor: this.model.background });\n    }\n    after_layout() {\n        super.after_layout();\n        this._stage.handleResize();\n    }\n    updateEffect() {\n        if (this.model.effect === \"spin\") {\n            this._stage.setSpin(true);\n        }\n        else if (this.model.effect === \"rock\") {\n            this._stage.setRock(true);\n        }\n        else {\n            this._stage.setSpin(false);\n            this._stage.setRock(false);\n        }\n    }\n    getParameters() {\n        if (this.model.color_scheme === \"custom\") {\n            var list = this.model.custom_color_scheme;\n            var scheme = NGL.ColormakerRegistry.addSelectionScheme(list, \"new scheme\");\n            return { color: scheme };\n        }\n        else {\n            return { colorScheme: this.model.color_scheme };\n        }\n    }\n    updateParameters() {\n        const parameters = this.getParameters();\n        try {\n            this._stage.compList[0].reprList[0].setParameters(parameters);\n        }\n        catch (e) {\n            console.log(e);\n        }\n    }\n    updateStage() {\n        const model = this.model;\n        this._stage.removeAllComponents();\n        if (model.object === \"\") {\n            return;\n        }\n        const parameters = this.getParameters();\n        function finish(o) {\n            o.addRepresentation(model.representation, parameters);\n            o.autoView();\n        }\n        if (model.extension !== \"\") {\n            this._stage.loadFile(new Blob([model.object], { type: 'text/plain' }), { ext: model.extension }).then(finish);\n        }\n        else if (model.object.includes(\"://\")) {\n            this._stage.loadFile(model.object).then(finish);\n        }\n        else {\n            this._stage.loadFile(\"rcsb://\" + model.object).then(finish);\n        }\n        // this.updateColor()\n        this.updateEffect();\n    }\n}\nexports.NGLViewerView = NGLViewerView;\nNGLViewerView.__name__ = \"NGLViewerView\";\nclass NGLViewer extends html_box_1.HTMLBox {\n    constructor(attrs) {\n        super(attrs);\n    }\n    static init_NGLViewer() {\n        this.prototype.default_view = NGLViewerView;\n        this.define(({ String, Any }) => ({\n            object: [String, \"<button style='width:100%'>Click Me</button>\"],\n            extension: [String, \"cif\"],\n            representation: [String, \"ribbon\"],\n            color_scheme: [String, \"chainid\"],\n            custom_color_scheme: [Any, \"chainid\"],\n            effect: [String, \"\"],\n            // background:               [ String, \"white\"], // This crashes the code :/\n        }));\n        this.override({\n            height: 400,\n            width: 600\n        });\n    }\n}\nexports.NGLViewer = NGLViewer;\nNGLViewer.__name__ = \"NGLViewer\";\nNGLViewer.__module__ = \"easyCrystallography.graphics.bokeh_extensions.ngl_viewer\";\nNGLViewer.init_NGLViewer();\n//# sourceMappingURL=ngl_viewer.js.map\n","type":"js","dependency_paths":[],"dependency_map":[],"exported":[{"type":"named","name":"NGLViewerView"},{"type":"named","name":"NGLViewer"}],"externals":[],"shims":[]},"code":{"source":"/* graphics/bokeh_extensions/ngl_viewer.js */ function _(require, module, exports, __esModule, __esExport) {\n    __esModule();\n    const html_box_1 = require(\"@bokehjs/models/layouts/html_box\");\n    class NGLViewerView extends html_box_1.HTMLBoxView {\n        connect_signals() {\n            super.connect_signals();\n            this.connect(this.model.properties.object.change, this.updateStage);\n            this.connect(this.model.properties.extension.change, this.updateStage);\n            this.connect(this.model.properties.representation.change, this.updateStage);\n            this.connect(this.model.properties.color_scheme.change, this.updateParameters);\n            this.connect(this.model.properties.custom_color_scheme.change, this.updateParameters);\n            this.connect(this.model.properties.effect.change, this.updateEffect);\n            this.connect(this.model.properties.background.change, this.setBackgroundcolor);\n        }\n        render() {\n            super.render();\n            this.el.id = \"viewport\";\n            const wn = window;\n            const ngl = wn.NGL;\n            this._stage = new ngl.Stage(this.el);\n            this.setBackgroundcolor();\n            const stage = this._stage;\n            this.updateStage();\n            window.addEventListener(\"resize\", function () {\n                stage.handleResize();\n            }, false);\n        }\n        setBackgroundcolor() {\n            console.log(this.model.background);\n            this._stage.setParameters({ backgroundColor: this.model.background });\n        }\n        after_layout() {\n            super.after_layout();\n            this._stage.handleResize();\n        }\n        updateEffect() {\n            if (this.model.effect === \"spin\") {\n                this._stage.setSpin(true);\n            }\n            else if (this.model.effect === \"rock\") {\n                this._stage.setRock(true);\n            }\n            else {\n                this._stage.setSpin(false);\n                this._stage.setRock(false);\n            }\n        }\n        getParameters() {\n            if (this.model.color_scheme === \"custom\") {\n                var list = this.model.custom_color_scheme;\n                var scheme = NGL.ColormakerRegistry.addSelectionScheme(list, \"new scheme\");\n                return { color: scheme };\n            }\n            else {\n                return { colorScheme: this.model.color_scheme };\n            }\n        }\n        updateParameters() {\n            const parameters = this.getParameters();\n            try {\n                this._stage.compList[0].reprList[0].setParameters(parameters);\n            }\n            catch (e) {\n                console.log(e);\n            }\n        }\n        updateStage() {\n            const model = this.model;\n            this._stage.removeAllComponents();\n            if (model.object === \"\") {\n                return;\n            }\n            const parameters = this.getParameters();\n            function finish(o) {\n                o.addRepresentation(model.representation, parameters);\n                o.autoView();\n            }\n            if (model.extension !== \"\") {\n                this._stage.loadFile(new Blob([model.object], { type: 'text/plain' }), { ext: model.extension }).then(finish);\n            }\n            else if (model.object.includes(\"://\")) {\n                this._stage.loadFile(model.object).then(finish);\n            }\n            else {\n                this._stage.loadFile(\"rcsb://\" + model.object).then(finish);\n            }\n            // this.updateColor()\n            this.updateEffect();\n        }\n    }\n    exports.NGLViewerView = NGLViewerView;\n    NGLViewerView.__name__ = \"NGLViewerView\";\n    class NGLViewer extends html_box_1.HTMLBox {\n        constructor(attrs) {\n            super(attrs);\n        }\n        static init_NGLViewer() {\n            this.prototype.default_view = NGLViewerView;\n            this.define(({ String, Any }) => ({\n                object: [String, \"<button style='width:100%'>Click Me</button>\"],\n                extension: [String, \"cif\"],\n                representation: [String, \"ribbon\"],\n                color_scheme: [String, \"chainid\"],\n                custom_color_scheme: [Any, \"chainid\"],\n                effect: [String, \"\"],\n                // background:               [ String, \"white\"], // This crashes the code :/\n            }));\n            this.override({\n                height: 400,\n                width: 600\n            });\n        }\n    }\n    exports.NGLViewer = NGLViewer;\n    NGLViewer.__name__ = \"NGLViewer\";\n    NGLViewer.__module__ = \"easyCrystallography.graphics.bokeh_extensions.ngl_viewer\";\n    NGLViewer.init_NGLViewer();\n}\n","min_source":"function _(e,t,s,o,i){o();const n=e(\"@bokehjs/models/layouts/html_box\");class r extends n.HTMLBoxView{connect_signals(){super.connect_signals(),this.connect(this.model.properties.object.change,this.updateStage),this.connect(this.model.properties.extension.change,this.updateStage),this.connect(this.model.properties.representation.change,this.updateStage),this.connect(this.model.properties.color_scheme.change,this.updateParameters),this.connect(this.model.properties.custom_color_scheme.change,this.updateParameters),this.connect(this.model.properties.effect.change,this.updateEffect),this.connect(this.model.properties.background.change,this.setBackgroundcolor)}render(){super.render(),this.el.id=\"viewport\";const e=window.NGL;this._stage=new e.Stage(this.el),this.setBackgroundcolor();const t=this._stage;this.updateStage(),window.addEventListener(\"resize\",(function(){t.handleResize()}),!1)}setBackgroundcolor(){console.log(this.model.background),this._stage.setParameters({backgroundColor:this.model.background})}after_layout(){super.after_layout(),this._stage.handleResize()}updateEffect(){\"spin\"===this.model.effect?this._stage.setSpin(!0):\"rock\"===this.model.effect?this._stage.setRock(!0):(this._stage.setSpin(!1),this._stage.setRock(!1))}getParameters(){if(\"custom\"===this.model.color_scheme){var e=this.model.custom_color_scheme;return{color:NGL.ColormakerRegistry.addSelectionScheme(e,\"new scheme\")}}return{colorScheme:this.model.color_scheme}}updateParameters(){const e=this.getParameters();try{this._stage.compList[0].reprList[0].setParameters(e)}catch(e){console.log(e)}}updateStage(){const e=this.model;if(this._stage.removeAllComponents(),\"\"===e.object)return;const t=this.getParameters();function s(s){s.addRepresentation(e.representation,t),s.autoView()}\"\"!==e.extension?this._stage.loadFile(new Blob([e.object],{type:\"text/plain\"}),{ext:e.extension}).then(s):e.object.includes(\"://\")?this._stage.loadFile(e.object).then(s):this._stage.loadFile(\"rcsb://\"+e.object).then(s),this.updateEffect()}}s.NGLViewerView=r,r.__name__=\"NGLViewerView\";class c extends n.HTMLBox{constructor(e){super(e)}static init_NGLViewer(){this.prototype.default_view=r,this.define((({String:e,Any:t})=>({object:[e,\"<button style='width:100%'>Click Me</button>\"],extension:[e,\"cif\"],representation:[e,\"ribbon\"],color_scheme:[e,\"chainid\"],custom_color_scheme:[t,\"chainid\"],effect:[e,\"\"]}))),this.override({height:400,width:600})}}s.NGLViewer=c,c.__name__=\"NGLViewer\",c.__module__=\"easyCrystallography.graphics.bokeh_extensions.ngl_viewer\",c.init_NGLViewer()}\n//# sourceMappingURL=ngl_viewer.min.js.map","min_map":"{\"version\":3,\"sources\":[\"0\"],\"names\":[\"_\",\"require\",\"module\",\"exports\",\"__esModule\",\"__esExport\",\"html_box_1\",\"NGLViewerView\",\"HTMLBoxView\",\"connect_signals\",\"super\",\"this\",\"connect\",\"model\",\"properties\",\"object\",\"change\",\"updateStage\",\"extension\",\"representation\",\"color_scheme\",\"updateParameters\",\"custom_color_scheme\",\"effect\",\"updateEffect\",\"background\",\"setBackgroundcolor\",\"render\",\"el\",\"id\",\"ngl\",\"window\",\"NGL\",\"_stage\",\"Stage\",\"stage\",\"addEventListener\",\"handleResize\",\"console\",\"log\",\"setParameters\",\"backgroundColor\",\"after_layout\",\"setSpin\",\"setRock\",\"getParameters\",\"list\",\"color\",\"ColormakerRegistry\",\"addSelectionScheme\",\"colorScheme\",\"parameters\",\"compList\",\"reprList\",\"e\",\"removeAllComponents\",\"finish\",\"o\",\"addRepresentation\",\"autoView\",\"loadFile\",\"Blob\",\"type\",\"ext\",\"then\",\"includes\",\"__name__\",\"NGLViewer\",\"HTMLBox\",\"constructor\",\"attrs\",\"static\",\"prototype\",\"default_view\",\"define\",\"String\",\"Any\",\"override\",\"height\",\"width\",\"__module__\",\"init_NGLViewer\"],\"mappings\":\"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\",\"file\":\"ngl_viewer.min.js\"}"}}]}